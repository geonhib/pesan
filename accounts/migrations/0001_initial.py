# Generated by Django 4.0.5 on 2022-06-16 06:05

import accounts.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('username', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telephone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('id_type', models.CharField(blank=True, choices=[('national ID', 'national'), ('pasport', 'passport'), ('other', 'other')], default='national', max_length=20)),
                ('id_number', models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.MinLengthValidator(9), django.core.validators.MaxLengthValidator(14)])),
                ('photo', models.ImageField(blank=True, null=True, upload_to='profile/', validators=[accounts.validators.image_validator])),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_member', models.BooleanField(default=False)),
                ('is_previously_logged_in', models.BooleanField(default=False)),
                ('village', models.CharField(blank=True, max_length=60, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True, validators=[accounts.validators.dob_validation])),
                ('gender', models.CharField(blank=True, choices=[('female', 'female'), ('male', 'male')], default='single', max_length=20)),
                ('next_of_kin_name', models.CharField(blank=True, max_length=50, null=True)),
                ('next_of_kin_contact', models.CharField(blank=True, max_length=50, null=True)),
                ('occupation', models.CharField(blank=True, max_length=60, null=True)),
                ('employer_type', models.CharField(blank=True, choices=[('unemmployed', 'unemployed'), ('self-employed', 'self-employed'), ('organization', 'organization')], default='organization', max_length=60)),
                ('organization', models.CharField(blank=True, max_length=80, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-date_joined', '-updated_at'],
            },
        ),
    ]
